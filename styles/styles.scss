@import 'variables.scss';

// Mixin de display -> @include display(display, justify-content, align-itens, flex-direction);

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: $font_family;
}

body {
    background-color: $body_bg_color_lm;
    min-height: 100vh;
    gap: 1rem;
    @include display(flex, space-between, center, column);

    .upper_part {
        width: 100%;
        height: 15%;
        @include display(flex, center, center, row);
        gap: clamp(2rem, 10%, 12rem);

        .icon_container {
            @include display(flex, flex-start, center, row);
            width: fit-content;
            height: 100%;
            padding: .8rem;
            color: hsl(0, 0%, 0%);
        }

        .switch_theme {
            padding-right: .8rem;
            @include display(flex, flex-start, center, row);
            gap: 1rem;
            height: 100%;
            width: fit-content;

            button {
                position: relative;
                width: 6rem;
                height: 2rem;
                border: none;
                border-radius: 1rem;
                background-color: hsla(0, 0, 50%, 0.8);

                .circle {
                    transform: translate(0%, -50%);
                    position: absolute;
                    width: 1.5rem;
                    height: 1.5rem;
                    border-radius: 50%;
                    background-color: hsl(0, 0, 100%);
                    left: 5%;
                    top: 50%;
                    transition: left .4s ease;
                }

                input {
                    cursor: pointer;
                    height: inherit;
                    width: inherit;
                    opacity: 0;

                    &:checked+.circle {
                        left: 70%;
                    }
                }
            }
        }
    }

    .theme_switcher {
        width: 40rem;
        height: 8rem;
        @include display(flex, center, center, row);

        button {
            position: relative;
            width: 5rem;
            height: 2rem;
            border-radius: 1rem;
            border: transparent;

            input {
                height: inherit;
                width: inherit;
                opacity: 0;
                cursor: pointer;
            }

            .circle {
                transform: translate(-50%, -50%);
                position: absolute;
                left: 20%;
                top: 50%;
                width: 1.5rem;
                height: 1.5rem;
                background-color: $circle_bg_color;
                border-radius: 50%;
            }
        }
    }

    main {
        width: $main_and_footer_width;
        height: 25rem;
        background-color: $main_bg_color_lm;
        border-radius: 1rem;

        .input_area {
            height: 5rem;
            @include display(flex, center, center, none);

            input {
                background-color: $input_bg_color_lm;
                color: $input_color_lm;
                width: 20rem;
                height: 2rem;
                padding: 1.5rem;
                font-size: 1.2rem;
                border-radius: .8rem 0rem 0rem .8rem;
                border: none;
                outline: none;
            }

            button {
                cursor: pointer;
                width: 9rem;
                height: 3rem;
                border-radius: 0rem .8rem .8rem 0rem;
                border: none;
                background-color: $button_bg_color_lm;
                font-size: 1rem;
                color: #fff;

                &:hover,
                &:active {
                    background-color: $button_bg_color_hover_lm;
                }
            }
        }

        #task_area {
            height: 19rem;
            @include display(flex, none, center, column);
            gap: .8rem;
            overflow-y: auto; // Caso o número de tarefas seja maior que o tamanho dessa div, cria uma Scrollbar
        }
    }

    footer {
        height: 5rem;
        width: $main_and_footer_width;
        background-color: $footer_bg_color_lm;
        border-radius: 1rem;
    }
}

// Classe criada para fazer os elementos serem apagados mais facilmente
.hide {
    display: none;
}

// Classes criadas para facilitar a mudança de situação da tarefa (concluida ou não concluida)
.uncompleted_task {
    @include task(29rem);
    background-color: $unconpleted_tasks_bg_color;
}

.completed_task {
    @include task(29rem);
    background-color: $completed_tasks_bg_color;
    position: relative;
    animation: task_active .2s ease forwards;

    // Cria o efeito de corte no texto quando uma task é completada
    &:before {
        content: "";
        position: absolute;
        left: 1.4rem;
        top: 50%;
        height: .1rem;
        width: 0%;
        background-color: #fff;
        animation: task_completed 2s ease-out;
    }
}

// Animações para o efeito de corte no texto quando uma task é completada
@keyframes task_active {
    50% {
        transform: scale(.9, .9);
    }

    100% {
        transform: scale(1, 1);
    }
}

@keyframes task_completed {
    to {
        width: calc(100% - 2.8rem);
    }
}